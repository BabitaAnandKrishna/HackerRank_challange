
'''
Consider the following:

A string,s , of length n where s=c0c1.....cn-1.
An integer,k , where k is a factor of n.
We can split s into n/k subsegments where each subsegment, ti, consists of a contiguous block of k characters in s .
Then, use each ti to create string ui such that:

The characters in ui are a subsequence of the characters in ti.
Any repeat occurrence of a character is removed from the string such that each character in ui occurs exactly once. 
In other words, if the character at some index j in ti occurs at a previous index <j in ti ,
then do not include the character in string ui.
Given s and k, print n/k lines where each line i denotes string ui .

Input Format

The first line contains a single string denoting .
The second line contains an integer, , denoting the length of each subsegment.

'''



def merge_the_tools(string, k):
    # your code goes here
    for i in range(0, len(string), k):
        s = ""
        for j in string[i : i + k]:
            if j not in s:
                s += j          
        print(s)

if __name__ == '__main__':
    string, k = input(), int(input())
    merge_the_tools(string, k)
